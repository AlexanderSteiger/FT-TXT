# This file is a template, and might need editing before it works on your project.
# see https://docs.gitlab.com/ce/ci/yaml/README.html for all available options

# you can delete this line if you're not using Docker
image: debian:stable

# todo check
# https://blog.sparksuite.com/7-ways-to-speed-up-gitlab-ci-cd-times-29f60aab69f9

stages:
  - install
  - build1
  - build2
  - build3

before_script:
  - echo "START"

after_script:
  - echo "END"

make:install:
  stage: install
  script:
  - apt-get update -qq
  - cd /builds/fischertechnik/FT-TXT
  - ./Linux-Pakete-Required.sh
  - env DEBIAN_FRONTEND=noninteractive  ./Linux-Pakete-Extra.sh
  - apt-get -y install joe git gitk cvs wget cpio -qq
  cache:
    key: "$CI_BUILD_NAME"
    untracked: true
  

make:bootloader:
  stage: build1
  script:
    - mkdir /opt/FT
    - chmod a+rw /opt/FT
    - cd /builds/fischertechnik/FT-TXT
    - ./Make-TXT-Bootloader.sh #> Make-TXT-Bootloader.sh.log
    #- ln -sf /builds/fischertechnik/u-boot "$CI_PROJECT_DIR/u-boot"
  artifacts:
    name: "$CI_COMMIT_REF_NAME-bootloader"
    paths:
    - "$CI_PROJECT_DIR/u-boot/"
    expire_in: 1 week
  after_script:
    - ls -la "$CI_PROJECT_DIR/u-boot/"
  cache:
    key: "$CI_BUILD_NAME"
    untracked: true

make:buildroot:
  stage: build2
  script:
    - cd /builds/fischertechnik/FT-TXT
    - ./Make-TXT-Buildroot-Clean.sh #> Make-TXT-Buildroot-Clean.sh.log
    #- ln -sf /builds/fischertechnik/buildroot "$CI_PROJECT_DIR/buildroot"
  artifacts:
    name: "$CI_COMMIT_REF_NAME-buildroot"
    paths:
    - "$CI_PROJECT_DIR/buildroot/"
    expire_in: 1 week
  after_script:
    - ls -la "$CI_PROJECT_DIR/buildroot/"
  cache:
    key: "$CI_BUILD_NAME"
    untracked: true

make:image:
  stage: build3
  script:
    - cd /builds/fischertechnik/FT-TXT
    - ./Make-TXT-Image.sh
    - export BUILD=`cat /builds/fischertechnik/FT-TXT/board/FT/TXT/BUILD`
    - echo $BUILD
    #- ln -sf "/builds/fischertechnik/ft-TXT_Build_$BUILD.img.zip" "$CI_PROJECT_DIR/ft-TXT_Build_$BUILD.img.zip"
  artifacts:
    name: "$CI_COMMIT_REF_NAME-image"
    paths:
    - "$CI_PROJECT_DIR/ft-TXT_Build_$BUILD.img.zip"
    expire_in: 1 week
  after_script:
    - ls -la "$CI_PROJECT_DIR/ft-TXT_Build_$BUILD.img.zip"
  cache:
    key: "$CI_BUILD_NAME"
    untracked: true

make:update:
  stage: build3
  script:
    - mkdir /builds/fischertechnik/update
    - cd /builds/fischertechnik/FT-TXT
    - ./Make-TXT-UpdateScripts.sh
    #- ln -sf /builds/fischertechnik/update "$CI_PROJECT_DIR/update"
  artifacts:
    name: "$CI_COMMIT_REF_NAME-update"
    paths:
      - "$CI_PROJECT_DIR/update/"
    expire_in: 1 week
  after_script:
    - ls -la "$CI_PROJECT_DIR/update/"
  cache:
    key: "$CI_BUILD_NAME"
    untracked: true

make:graphs:
  stage: build3
  before_script:
    - apt-get -y install graphviz python-matplotlib python-numpy -qq
  script:
    - cd /builds/fischertechnik/buildroot
    - make graph-depends
    - make graph-build
    - make graph-size
    #- ln -sf /builds/fischertechnik/buildroot/output/graphs "$CI_PROJECT_DIR/buildroot/output/graphs"
  artifacts:
    name: "$CI_COMMIT_REF_NAME-graphs"
    paths:
      - "$CI_PROJECT_DIR/buildroot/output/graphs/"
  after_script:
    - ls -la "$CI_PROJECT_DIR/buildroot/output/graphs/"
  cache:
    key: "$CI_BUILD_NAME"
    untracked: true
